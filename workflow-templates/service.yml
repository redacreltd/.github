name: <service> CI/CD

on:
  workflow_call:
    inputs:
      skip:
        description: Don't run the specified jobs
        default: ''
        required: false
        type: string
    outputs:
      changed:
        value: ${{ jobs.changed-files.outputs.app }}
      version:
        value: ${{ jobs.build.outputs.version }}

jobs:
  changed-files:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    outputs:
      app: ${{ steps.filter.outputs.app }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - if: "${{ contains(github.event.head_commit.message, 'chore(main): release') }}"
        uses: redacreltd/actions/last-change-ref-name@v2
        id: tag
        with:
          current-tag: ${{ github.sha }}

      # See https://github.com/dorny/paths-filter
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ steps.tag.outputs.last-change-ref-name || '' }}
          filters: |
            app:
              - <service_related_file globs>

  unit:
    if: needs.changed-files.outputs.app == 'true' && !contains(inputs.skip, 'unit')
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    needs: changed-files
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Other unit test related steps

  build:
    if: (needs.changed-files.outputs.app == 'true' || github.event_name == 'pull_request') && !contains(inputs.skip, 'build')
    needs: [changed-files]
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    outputs:
      version: ${{ steps.docker-build.outputs.version }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        # final image created as <platform>/<service>:tag
      - id: docker-build
        uses: redacreltd/actions/docker-build@v2
        with:
          app_name: <service>
          build-args: CHANGEME
          context: CHANGEME
          platform: <platform>
          file: CHANGEME
